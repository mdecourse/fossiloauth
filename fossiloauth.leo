<?xml version="1.0" encoding="utf-8"?>
<!-- Created by Leo: http://leoeditor.com/leo_toc.html -->
<leo_file xmlns:leo="http://leoeditor.com/namespaces/leo-python-editor/1.1" >
<leo_header file_format="2"/>
<globals/>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="yen.20210608205524.1"><vh>@settings</vh>
<v t="yen.20210608205524.2"><vh>@string theme-name = DefaultTheme</vh></v>
<v t="yen.20210608205524.3"><vh> Color definitions</vh>
<v t="yen.20210608205524.4"><vh>@color LeoGreen = #00AA00</vh></v>
<v t="yen.20210608205524.5"><vh>@color LeoYellow = #ffffec</vh></v>
<v t="yen.20210608205524.6"><vh>Logical colors</vh>
<v t="yen.20210608205524.7"><vh>@color log-black-color = black</vh></v>
<v t="yen.20210608205524.8"><vh>@color log-blue-color = blue</vh></v>
<v t="yen.20210608205524.9"><vh>@color log-cyan-color = cyan</vh></v>
<v t="yen.20210608205524.10"><vh>@color log-error-color = red</vh></v>
<v t="yen.20210608205524.11"><vh>@color log-green-color = green</vh></v>
<v t="yen.20210608205524.12"><vh>@color log-info-color = blue</vh></v>
<v t="yen.20210608205524.13"><vh>@color log-magenta-color = magenta</vh></v>
<v t="yen.20210608205524.14"><vh>@color log-note-color = blue</vh></v>
<v t="yen.20210608205524.15"><vh>@color log-orange-color = orange</vh></v>
<v t="yen.20210608205524.16"><vh>@color log-red-color = red</vh></v>
<v t="yen.20210608205524.17"><vh>@color log-violet-color = violet</vh></v>
<v t="yen.20210608205524.18"><vh>@color log-warning-color = red</vh></v>
<v t="yen.20210608205524.19"><vh>@color log-white-color = white</vh></v>
<v t="yen.20210608205524.20"><vh>@color log-yellow-color = yellow</vh></v>
</v>
<v t="yen.20210608205524.21"><vh>Solarized color definitions</vh>
<v t="yen.20210608205524.22"><vh>@color solarized-base0 = #839496</vh></v>
<v t="yen.20210608205524.23"><vh>@color solarized-base00 = #657b83</vh></v>
<v t="yen.20210608205524.24"><vh>@color solarized-base01 = #586e75</vh></v>
<v t="yen.20210608205524.25"><vh>@color solarized-base02 = #073642</vh></v>
<v t="yen.20210608205524.26"><vh>@color solarized-base03 = #002b36</vh></v>
<v t="yen.20210608205524.27"><vh>@color solarized-base1 = #93a1a1</vh></v>
<v t="yen.20210608205524.28"><vh>@color solarized-base2 = #eee8d5</vh></v>
<v t="yen.20210608205524.29"><vh>@color solarized-base3 = #fdf6e3</vh></v>
<v t="yen.20210608205524.30"><vh>@color solarized-black = #000005</vh></v>
<v t="yen.20210608205524.31"><vh>@color solarized-blue = #268bd2</vh></v>
<v t="yen.20210608205524.32"><vh>@color solarized-cyan = #2aa198</vh></v>
<v t="yen.20210608205524.33"><vh>@color solarized-green = #859900</vh></v>
<v t="yen.20210608205524.34"><vh>@color solarized-magenta = #d33682</vh></v>
<v t="yen.20210608205524.35"><vh>@color solarized-orange = #cb4b16</vh></v>
<v t="yen.20210608205524.36"><vh>@color solarized-red = #dc322f</vh></v>
<v t="yen.20210608205524.37"><vh>@color solarized-violet = #6c71c4</vh></v>
<v t="yen.20210608205524.38"><vh>@color solarized-white = #fdf6e3 </vh></v>
<v t="yen.20210608205524.39"><vh>@color solarized-yellow = #b58900</vh></v>
</v>
<v t="yen.20210608205524.40"><vh>Solarized color reference</vh></v>
</v>
<v t="yen.20210608205524.90"><vh>Appearance (change these first)</vh>
<v t="yen.20210608205524.91"><vh>Qt Gui settings</vh>
<v t="yen.20210608205524.92"><vh>@string qt-style-name = None</vh></v>
<v t="yen.20210608205524.93"><vh>Colors</vh>
<v t="yen.20210608205524.94"><vh>Body pane colors</vh>
<v t="yen.20210608205524.95"><vh>@color body-bg = white</vh></v>
<v t="yen.20210608205524.96"><vh>@color body-fg = black</vh></v>
<v t="yen.20210608205524.97"><vh>@color body-sel-fg = white</vh></v>
<v t="yen.20210608205524.98"><vh>@color body-sel-bg = lightgray</vh></v>
</v>
<v t="yen.20210608205524.99"><vh>Border colors</vh>
<v t="yen.20210608205524.100"><vh>@color focused-border-focus-color = blue</vh></v>
<v t="yen.20210608205524.101"><vh>@color focused-border-unfocus-color = white</vh></v>
</v>
<v t="yen.20210608205524.102"><vh>Button colors</vh>
<v t="yen.20210608205524.103"><vh>@color run-script-btn-bg = @MistyRose1</vh></v>
<v t="yen.20210608205524.104"><vh>@color debug-script-btn-bg = @MistyRose1</vh></v>
<v t="yen.20210608205524.105"><vh>@color script-button-button-btn-bg = #ffffcc</vh></v>
<v t="yen.20210608205524.106"><vh>@color script-button-btn-bg = @MistyRose1</vh></v>
<v t="yen.20210608205524.107"><vh>@color generic-button-btn-bg = @LightSteelBlue1</vh></v>
<v t="yen.20210608205524.108"><vh>@color quick-move-btn-bg = @LightSteelBlue1</vh></v>
<v t="yen.20210608205524.109"><vh>@color interact-btn-bg = @LightBlue</vh></v>
<v t="yen.20210608205524.110"><vh>@color at-button-btn-bg = @LightSteelBlue1</vh></v>
</v>
<v t="yen.20210608205524.111"><vh>Find tab colors</vh>
<v t="yen.20210608205524.112"><vh>@color find-tab-bg = white</vh></v>
</v>
<v t="yen.20210608205524.113"><vh>Gutter colors</vh>
<v t="yen.20210608205524.114"><vh>@color gutter-bg = @LightSteelBlue1</vh></v>
<v t="yen.20210608205524.115"><vh>@color gutter-fg = black</vh></v>
</v>
<v t="yen.20210608205524.116"><vh>Log pane colors</vh>
<v t="yen.20210608205524.117"><vh>@color log-fg = black</vh></v>
<v t="yen.20210608205524.118"><vh>@color log-bg = white</vh></v>
</v>
<v t="yen.20210608205524.119"><vh>Minibuffer colors</vh>
<v t="yen.20210608205524.120"><vh>@color minibuffer-fg = black</vh></v>
<v t="yen.20210608205524.121"><vh>@color minibuffer-bg = @LightSteelBlue1</vh></v>
<v t="yen.20210608205524.122"><vh>@color minibuffer-sel-fg = white</vh></v>
<v t="yen.20210608205524.123"><vh>@color minibuffer-sel-bg = lightgray</vh></v>
</v>
<v t="yen.20210608205524.124"><vh>Outline colors</vh>
<v t="yen.20210608205524.125"><vh>Basic outline colors</vh>
<v t="yen.20210608205524.126"><vh>@color tree-fg = black</vh></v>
<v t="yen.20210608205524.127"><vh>@color tree-bg = @LeoYellow</vh></v>
</v>
<v t="yen.20210608205524.128"><vh>Colors for headlines that *are* being edited</vh>
<v t="yen.20210608205524.129"><vh>@color head-fg = black</vh></v>
<v t="yen.20210608205524.130"><vh>@color head-bg = white</vh></v>
<v t="yen.20210608205524.131"><vh>@color head-sel-fg = white</vh></v>
<v t="yen.20210608205524.132"><vh>@color head-sel-bg = blue</vh></v>
</v>
<v t="yen.20210608205524.133"><vh>Colors for headlines that are *not* being edited</vh>
<v t="yen.20210608205524.134"><vh>@@string edit-label-border = 2px</vh></v>
<v t="yen.20210608205524.135"><vh>@@string edit-label-margin = 2px</vh></v>
<v t="yen.20210608205524.136"><vh>@color edit-label-bg = @LightSteelBlue1</vh></v>
<v t="yen.20210608205524.137"><vh>@color edit-label-fg = black</vh></v>
</v>
</v>
<v t="yen.20210608205524.138"><vh>Plugin colors (deprecated)</vh>
<v t="yen.20210608205524.139"><vh>@color text-foreground = black</vh></v>
<v t="yen.20210608205524.140"><vh>@color text-foreground-body = @text-foreground</vh></v>
<v t="yen.20210608205524.141"><vh>@color text-foreground-tree = @text-foreground</vh></v>
<v t="yen.20210608205524.142"><vh>@color text-foreground-log = @text-foreground</vh></v>
</v>
<v t="yen.20210608205524.143"><vh>Render pane colors</vh>
<v t="yen.20210608205524.144"><vh>@color render-bg = white</vh></v>
<v t="yen.20210608205524.145"><vh>@color render-fg = black</vh></v>
</v>
<v t="yen.20210608205524.146"><vh>Scroll area colors</vh>
<v t="yen.20210608205524.147"><vh>@color scroll-area-bg = white</vh></v>
</v>
<v t="yen.20210608205524.148"><vh>Splitter colors</vh>
<v t="yen.20210608205524.149"><vh>@color splitter-bg = white</vh></v>
<v t="yen.20210608205524.150"><vh>@color splitter-handle-bg = @LightSteelBlue1</vh></v>
<v t="yen.20210608205524.151"><vh>@color splitter-border-fg = white</vh></v>
<v t="yen.20210608205524.152"><vh>@color splitter-border-style = solid</vh></v>
<v t="yen.20210608205524.153"><vh>@color splitter-hover-bg = @LightSteelBlue1</vh></v>
</v>
<v t="yen.20210608205524.154"><vh>Status area colors</vh>
<v t="yen.20210608205524.155"><vh>@color status-bg = lightgrey</vh></v>
<v t="yen.20210608205524.156"><vh>@color status-fg = black</vh></v>
<v t="yen.20210608205524.157"><vh>@color status-border-style = solid</vh></v>
<v t="yen.20210608205524.158"><vh>@color status-border-color = darkgrey</vh></v>
</v>
<v t="yen.20210608205524.159"><vh>Status area colors for searches</vh>
<v t="yen.20210608205524.160"><vh>@color find-found-bg = blue</vh></v>
<v t="yen.20210608205524.161"><vh>@color find-found-fg = white</vh></v>
<v t="yen.20210608205524.162"><vh>@color find-not-found-bg = red</vh></v>
<v t="yen.20210608205524.163"><vh>@color find-not-found-fg = white</vh></v>
</v>
<v t="yen.20210608205524.164"><vh>Widget colors (simple widgets)</vh>
<v t="yen.20210608205524.165"><vh>@color frame-bg = white</vh></v>
<v t="yen.20210608205524.166"><vh>@color stacked-widget-border-color = white</vh></v>
<v t="yen.20210608205524.167"><vh>@color stacked-widget-bg = white</vh></v>
<v t="yen.20210608205524.168"><vh>@color tabbed-widget-bg = white</vh></v>
</v>
</v>
<v t="yen.20210608205524.169"><vh>Fonts</vh>
<v t="yen.20210608205524.170"><vh>Basic Fonts (change these first)</vh>
<v t="yen.20210608205524.171"><vh>@string font-family = Droid Sans Mono, DejaVu Sans Mono</vh></v>
<v t="yen.20210608205524.172"><vh>@string font-size = 18pt </vh></v>
<v t="yen.20210608205524.173"><vh>@string medium-font-size = 14pt</vh></v>
<v t="yen.20210608205524.174"><vh>@string small-font-size = 14pt</vh></v>
<v t="yen.20210608205524.175"><vh>@string font-style = normal</vh></v>
<v t="yen.20210608205524.176"><vh>@string font-weight = normal</vh></v>
</v>
<v t="yen.20210608205524.177"><vh>Body Fonts</vh>
<v t="yen.20210608205524.178"><vh>@string body-font-family = @font-family</vh></v>
<v t="yen.20210608205524.179"><vh>@string body-font-size = @font-size</vh></v>
<v t="yen.20210608205524.180"><vh>@string body-font-style = @font-style</vh></v>
<v t="yen.20210608205524.181"><vh>@string body-font-weight = @font-weight</vh></v>
<v t="yen.20210608205524.182"><vh>@string font-size-body = @body-font-size</vh></v>
</v>
<v t="yen.20210608205524.183"><vh>Dialog fonts</vh>
<v t="yen.20210608205524.184"><vh>@string dialog-font-family = @font-family</vh></v>
<v t="yen.20210608205524.185"><vh>@string dialog-font-size = @font-size</vh></v>
<v t="yen.20210608205524.186"><vh>@string dialog-font-weight = @font-weight </vh></v>
<v t="yen.20210608205524.187"><vh>@string dialog-font-style = @font-style</vh></v>
</v>
<v t="yen.20210608205524.188"><vh>Find Panel Fonts</vh>
<v t="yen.20210608205524.189"><vh>@string checkbox-font-family = @font-family</vh></v>
<v t="yen.20210608205524.190"><vh>@string checkbox-font-size = @medium-font-size</vh></v>
<v t="yen.20210608205524.191"><vh>@string find-font-family = @font-family</vh></v>
<v t="yen.20210608205524.192"><vh>@string find-font-size = @medium-font-size</vh></v>
<v t="yen.20210608205524.193"><vh>@string find-font-style = @font-style</vh></v>
<v t="yen.20210608205524.194"><vh>@string find-font-weight = @font-weight</vh></v>
<v t="yen.20210608205524.195"><vh>@string find-pattern-font-family = @font-family</vh></v>
</v>
<v t="yen.20210608205524.196"><vh>Gutter Fonts</vh>
<v t="yen.20210608205524.197"><vh>@string gutter-font-family = @font-family</vh></v>
<v t="yen.20210608205524.198"><vh>@string gutter-font-size = @small-font-size</vh></v>
<v t="yen.20210608205524.199"><vh>@string gutter-font-style = @font-style</vh></v>
<v t="yen.20210608205524.200"><vh>@string gutter-font-weight = @font-weight</vh></v>
</v>
<v t="yen.20210608205524.201"><vh>Log pane fonts</vh>
<v t="yen.20210608205524.202"><vh>@string log-sel-fg = white</vh></v>
<v t="yen.20210608205524.203"><vh>@string log-sel-bg = blue</vh></v>
<v t="yen.20210608205524.204"><vh>@string log-font-family = @font-family</vh></v>
<v t="yen.20210608205524.205"><vh>@string log-font-size = @font-size</vh></v>
<v t="yen.20210608205524.206"><vh>@string log-font-weight = @font-weight</vh></v>
<v t="yen.20210608205524.207"><vh>@string log-font-style = @font-style</vh></v>
</v>
<v t="yen.20210608205524.208"><vh>Minibuffer fonts</vh>
<v t="yen.20210608205524.209"><vh>@string minibuffer-font-family = @font-family</vh></v>
<v t="yen.20210608205524.210"><vh>@string minibuffer-font-size = @font-size</vh></v>
<v t="yen.20210608205524.211"><vh>@string minibuffer-font-weight = @font-weight</vh></v>
<v t="yen.20210608205524.212"><vh>@string minibuffer-font-style = @font-style</vh></v>
</v>
<v t="yen.20210608205524.213"><vh>Outline pane fonts</vh>
<v t="yen.20210608205524.214"><vh>Basic outline fonts</vh>
<v t="yen.20210608205524.215"><vh>@string tree-font-family = @font-family</vh></v>
<v t="yen.20210608205524.216"><vh>@string tree-font-size = @font-size</vh></v>
<v t="yen.20210608205524.217"><vh>@string tree-font-weight = @font-weight</vh></v>
<v t="yen.20210608205524.218"><vh>@string tree-font-style = @font-style</vh></v>
</v>
<v t="yen.20210608205524.219"><vh>Fonts for headlines that *are* being edited</vh>
<v t="yen.20210608205524.220"><vh>@string head-font-family = @font-family</vh></v>
<v t="yen.20210608205524.221"><vh>@string head-font-size = @font-size</vh></v>
<v t="yen.20210608205524.222"><vh>@string head-font-weight = @font-weight</vh></v>
<v t="yen.20210608205524.223"><vh>@string head-font-style = @font-style</vh></v>
</v>
<v t="yen.20210608205524.224"><vh>Fonts for headlines that are *not* being edited</vh>
<v t="yen.20210608205524.225"><vh>@string edit-label-font-family = @font-family</vh></v>
<v t="yen.20210608205524.226"><vh>@string edit-label-font-size = @font-size</vh></v>
<v t="yen.20210608205524.227"><vh>@string edit-label-font-weight = @font-weight</vh></v>
<v t="yen.20210608205524.228"><vh>@string edit-label-font-style = @font-style</vh></v>
</v>
</v>
<v t="yen.20210608205524.229"><vh>Status area fonts</vh>
<v t="yen.20210608205524.230"><vh>@string status-font-family = @font-family</vh></v>
<v t="yen.20210608205524.231"><vh>@string status-font-size = @small-font-size</vh></v>
<v t="yen.20210608205524.232"><vh>@string status-font-weight = @font-weight</vh></v>
<v t="yen.20210608205524.233"><vh>@string status-font-style = @font-style</vh></v>
</v>
</v>
<v t="yen.20210608205524.234"><vh>Margins &amp; borders</vh>
<v t="yen.20210608205524.235"><vh>Dialogs styles</vh>
<v t="yen.20210608205524.236"><vh>@string dialog-border = 2px</vh></v>
<v t="yen.20210608205524.237"><vh>@string dialog-margin = 2px</vh></v>
</v>
<v t="yen.20210608205524.238"><vh>Focus border styles</vh>
<v t="yen.20210608205524.239"><vh>@string focused-border-style = solid</vh></v>
<v t="yen.20210608205524.240"><vh>@string focused-border-width = 3px</vh></v>
</v>
<v t="yen.20210608205524.241"><vh>Gutter</vh>
<v t="yen.20210608205524.242"><vh>@bool use-gutter = True</vh></v>
<v t="yen.20210608205524.243"><vh>@int gutter-w-adjust = 12</vh></v>
<v t="yen.20210608205524.244"><vh>@int gutter-y-adjust = 10</vh></v>
</v>
<v t="yen.20210608205524.245"><vh>Minibuffer styles</vh>
<v t="yen.20210608205524.246"><vh>@string minibuffer-border = 2px</vh></v>
<v t="yen.20210608205524.247"><vh>@string minibuffer-margin = 2px</vh></v>
</v>
<v t="yen.20210608205524.248"><vh>Stacked widgets styles</vh>
<v t="yen.20210608205524.249"><vh>@string stacked-widget-padding = 0px</vh></v>
</v>
<v t="yen.20210608205524.250"><vh>Status area styles</vh>
<v t="yen.20210608205524.251"><vh>@string status-border-width = 1px</vh></v>
</v>
<v t="yen.20210608205524.252"><vh>Vim mode borders/colors</vh>
<v t="yen.20210608205524.253"><vh>@string vim-mode-normal-border = border: 3px solid white</vh></v>
<v t="yen.20210608205524.254"><vh>@string vim-mode-insert-border = border: 3px solid red</vh></v>
<v t="yen.20210608205524.255"><vh>@string vim-mode-visual-border = border: 3px solid gray</vh></v>
<v t="yen.20210608205524.256"><vh>@string vim-mode-unfocused-border = border: 3px dashed white</vh></v>
</v>
</v>
<v t="yen.20210608205524.257"><vh>Outline indicators</vh>
<v t="yen.20210608205524.258"><vh>@string tree-image-closed = None</vh></v>
<v t="yen.20210608205524.259"><vh>@string tree-image-open = None</vh></v>
<v t="yen.20210608205524.260"><vh>@int tree-icon-separation = 1</vh></v>
</v>
<v t="yen.20210608205524.261"><vh>Plugins</vh>
<v t="yen.20210608205524.262"><vh>bookmarks.py plugin</vh>
<v t="yen.20210608205524.263"><vh>bookmarks base</vh>
<v t="yen.20210608205524.264"><vh>@color bookmarks-base-color = @text-foreground</vh></v>
<v t="yen.20210608205524.265"><vh>@string bookmarks-base-border = "none"</vh></v>
<v t="yen.20210608205524.266"><vh>@string bookmarks-base-decoration = "none"</vh></v>
<v t="yen.20210608205524.267"><vh>@string bookmarks-base-family = @font-family</vh></v>
<v t="yen.20210608205524.268"><vh>@string bookmarks-base-margin = 0</vh></v>
<v t="yen.20210608205524.269"><vh>@string bookmarks-base-padding = 1</vh></v>
<v t="yen.20210608205524.270"><vh>@string bookmarks-base-size = @bookmarks-font-size</vh></v>
<v t="yen.20210608205524.271"><vh>@string bookmarks-base-style = normal</vh></v>
<v t="yen.20210608205524.272"><vh>@string bookmarks-base-weight = regular</vh></v>
</v>
<v t="yen.20210608205524.273"><vh>bookmarks children</vh>
<v t="yen.20210608205524.274"><vh>@color bookmarks-children-color = @text-foreground</vh></v>
<v t="yen.20210608205524.275"><vh>@string bookmarks-children-decoration = underline</vh></v>
<v t="yen.20210608205524.276"><vh>@string bookmarks-children-family = @font-family</vh></v>
<v t="yen.20210608205524.277"><vh>@string bookmarks-children-size = ignore</vh></v>
<v t="yen.20210608205524.278"><vh>@string bookmarks-children-style = ignore</vh></v>
<v t="yen.20210608205524.279"><vh>@string bookmarks-children-weight = ignore</vh></v>
</v>
<v t="yen.20210608205524.280"><vh>bookmarks current</vh>
<v t="yen.20210608205524.281"><vh>@color bookmarks-current-color = blue</vh></v>
<v t="yen.20210608205524.282"><vh>@string bookmarks-current-decoration = "none"</vh></v>
<v t="yen.20210608205524.283"><vh>@string bookmarks-current-size = @bookmarks-font-size</vh></v>
<v t="yen.20210608205524.284"><vh>@string bookmarks-current-style = "none"</vh></v>
<v t="yen.20210608205524.285"><vh>@string bookmarks-current-weight = bold</vh></v>
</v>
<v t="yen.20210608205524.286"><vh>bookmarks expanded</vh>
<v t="yen.20210608205524.287"><vh>@color bookmarks-expanded-color = @text-foreground</vh></v>
<v t="yen.20210608205524.288"><vh>@string bookmarks-expanded-decoration = underline</vh></v>
<v t="yen.20210608205524.289"><vh>@string bookmarks-expanded-size = ignore</vh></v>
<v t="yen.20210608205524.290"><vh>@string bookmarks-expanded-style = ignore</vh></v>
<v t="yen.20210608205524.291"><vh>@string bookmarks-expanded-weight = bold</vh></v>
<v t="yen.20210608205524.292"><vh>@string bookmarks-font-size = 11pt</vh></v>
</v>
</v>
<v t="yen.20210608205524.293"><vh>screencast.py plugin</vh>
<v t="yen.20210608205524.294"><vh>@string screencast-bg = yellow</vh></v>
<v t="yen.20210608205524.295"><vh>@string screencast-font-family = Times New Roman</vh></v>
<v t="yen.20210608205524.296"><vh>@string screencaset-font-size = 18pt</vh></v>
<v t="yen.20210608205524.297"><vh>@string screencast-font-weight = normal</vh></v>
<v t="yen.20210608205524.298"><vh>@string screencaset-font-style = normal</vh></v>
</v>
</v>
</v>
<v t="yen.20210608205524.299"><vh>Qt Gui style sheet</vh>
<v t="yen.20210608205524.300"><vh>@data qt-gui-plugin-style-sheet</vh>
<v t="yen.20210608205524.301"><vh>Body pane</vh></v>
<v t="yen.20210608205524.302"><vh>Buttons</vh></v>
<v t="yen.20210608205524.303"><vh>Dialogs (QLabel)</vh></v>
<v t="yen.20210608205524.304"><vh>Find Tab</vh></v>
<v t="yen.20210608205524.305"><vh>Gutter</vh></v>
<v t="yen.20210608205524.306"><vh>Log panes</vh></v>
<v t="yen.20210608205524.307"><vh>Minibuffer</vh></v>
<v t="yen.20210608205524.308"><vh>Outline pane (change default path)</vh></v>
<v t="yen.20210608205524.309"><vh>Plugins</vh>
<v t="yen.20210608205524.310"><vh>Bookmarks plugin (stylesheet)</vh></v>
<v t="yen.20210608205524.311"><vh>Screencast plugin</vh></v>
<v t="yen.20210608205524.312"><vh>Interact plugin</vh></v>
<v t="yen.20210608205524.313"><vh>Quickmove plugin</vh></v>
</v>
<v t="yen.20210608205524.314"><vh>Rendering pane</vh></v>
<v t="yen.20210608205524.315"><vh>Splitter</vh></v>
<v t="yen.20210608205524.316"><vh>Status areas</vh></v>
<v t="yen.20210608205524.317"><vh>Widgets</vh></v>
<v t="yen.20210608205524.318"><vh>zz Must be last</vh></v>
</v>
</v>
<v t="yen.20210608205524.319"><vh>User Qt Gui style sheet</vh>
<v t="yen.20210608205524.320"><vh>@ignore @data qt-gui-user-style-sheet</vh></v>
</v>
</v>
</v>
<v t="yen.20210606091617.1"><vh>@settings_kmol</vh>
<v t="yen.20210606091617.2"><vh>@data qt-gui-plugin-style-sheet</vh></v>
<v t="yen.20210606091617.3"><vh>@string initial_split_orientation = horizontal</vh></v>
</v>
<v t="yen.20210607012830.1"><vh>About</vh>
<v t="yen.20210607095902.1"><vh>wsgi service</vh>
<v t="yen.20210607100050.1"><vh>@path fossil_template</vh>
<v t="yen.20210607100102.1"><vh>@edit fossil_readme.txt</vh></v>
</v>
</v>
<v t="yen.20210607012835.1"><vh>generate self-signed certificate</vh></v>
<v t="yen.20210607014414.1"><vh>Oauth2</vh></v>
<v t="yen.20210607012905.1"><vh>oauth2 for @gm user</vh>
<v t="yen.20210607012905.2"><vh>oauth2 使用 authomatic</vh>
<v t="yen.20210607012905.3"><vh>google 設定</vh></v>
<v t="yen.20210607012905.4"><vh>啟用步驟</vh></v>
</v>
<v t="yen.20210607012905.5"><vh>read client id and secret from file</vh></v>
<v t="yen.20210607012905.6"><vh>generate secret id for Flask</vh></v>
<v t="yen.20210607012905.7"><vh>Google logout and redirect</vh></v>
</v>
</v>
<v t="yen.20210626135328.1"><vh>login to Fossil</vh></v>
<v t="yen.20210626135449.1"><vh>Python sqlite</vh></v>
<v t="yen.20210606100250.1"><vh>@edit README.md</vh></v>
<v t="yen.20210606100130.1"><vh>@edit .gitignore</vh></v>
<v t="yen.20210606100214.1"><vh>@edit LICENSE</vh></v>
<v t="yen.20210607011849.1"><vh>@edit config.py</vh></v>
<v t="yen.20210606091602.2"><vh>@clean fossiloauth.py</vh>
<v t="yen.20210606091714.1"><vh>Declarations (fossiloauth.py)</vh></v>
<v t="yen.20210607012220.1"><vh>login_required</vh></v>
<v t="yen.20210607012641.1"><vh>index</vh></v>
<v t="yen.20210607012249.1"><vh>menu</vh></v>
<v t="yen.20210607011234.1"><vh>login</vh></v>
<v t="yen.20210607011601.1"><vh>logout</vh></v>
<v t="yen.20210606091714.2"><vh>hello (fossiloauth.py)</vh></v>
<v t="yen.20210606092715.1"><vh>form</vh></v>
<v t="yen.20210626140559.1"><vh>forum</vh></v>
<v t="yen.20210606092616.1"><vh>genAccount</vh></v>
</v>
<v t="yen.20210606091717.1"><vh>@clean wsgi.py</vh>
<v t="yen.20210606091727.1"><vh>Declarations (wsgi.py)</vh></v>
</v>
<v t="yen.20210607011406.1"><vh>@path templates</vh>
<v t="yen.20210607012542.1"><vh>@edit base.html</vh></v>
<v t="yen.20210607012704.1"><vh>@edit index.html</vh></v>
<v t="yen.20210607011512.1"><vh>@edit alogin.html</vh></v>
<v t="yen.20210607011415.1"><vh>@edit login.html</vh></v>
<v t="yen.20210607012337.1"><vh>@edit menu.html</vh></v>
</v>
</vnodes>
<tnodes>
<t tx="yen.20210606091602.2">@others
if __name__ == "__main__":
    app.run(host='0.0.0.0')
@language python
@tabwidth -4
</t>
<t tx="yen.20210606091617.1"></t>
<t tx="yen.20210606091617.2">QSplitter::handle {
    background-color: #CAE1FF; /* lightSteelBlue1 */
}

QStackedWidget {
    /* background-color:lightpink; */
    border-color: red;
    padding: 0px;
    /* border-width: 0px; */
    /* background-color: yellow; */
}

QSplitter {
    border-color: white;
    background-color: white;
    border-style: solid;
}

QTreeWidget {
    /* These apply to the selected item, but not to editing items.*/
    background-color: #ffffec; /* Leo's traditional tree color */
    selection-color: black; /* was white */
    selection-background-color: lightgrey;
    /* font-family: SansSerif; */
    /*font-family: DejaVu Sans Mono;*/
    font-family:YaHei Mono;
    /* 標題字型大小設定 */
    font-size: 22px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
 }

/* Headline edit widgets */
QTreeWidget QLineEdit {
    background-color: cornsilk;
    selection-color: white;
    selection-background-color: blue;
    /*font-family: DejaVu Sans Mono;*/    
    font-family:YaHei Mono;
    /* 沒有特別對應字型大小 */
    font-size: 22px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The log panes */
QTextEdit {
    background-color: #f2fdff;
    selection-color: red;
    selection-background-color: blue;
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* log font 大小 */
    font-size: 22px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The body pane */
QTextEdit#richTextEdit {
    background-color: #fdf5f5; /* A kind of pink. */
    selection-color: white;
    selection-background-color: red;
    /*font-family: DejaVu Sans Mono;*/
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* 內文字型大小 */
    font-size: 22px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

QLabel {
    font-family:YaHei Mono;
    /* 下方的 Minibuffer 標題字型大小 */
    font-size: 22px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

/* Editor labels */
QLineEdit#editorLabel {
    background-color: #ffffec;
    font-family:YaHei Mono;
    /* 沒有直接對應字型大小 */
    font-size: 22px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
    border: 2px;
    margin: 2px;
}</t>
<t tx="yen.20210606091617.3">horizontal: body pane to the left
vertical: body pane on the botton</t>
<t tx="yen.20210606091714.1">#from flask import Flask, request
# import from flask
from flask import Flask, request, redirect, url_for, flash, \
                render_template, session, make_response
# for Fossil SCM login
import requests                           
# for authomatic
from authomatic.adapters import WerkzeugAdapter
from authomatic import Authomatic

# from config.py 導入 CONFIG and CALLBACK_URL
from config import CONFIG
from config import CALLBACK_URL
# for login.html template
from config import site
# for login to Fossil SCM repo
from config import fossil

# for generating secret_key
import os
import time

# for mako template engine
# for mako template 系統
from mako.template import Template
from mako.lookup import TemplateLookup

# for login_required
from functools import wraps

# Instantiate Authomatic.
# generate secret string randomly
secret = os.urandom(24).hex()
authomatic = Authomatic(CONFIG, secret, report_errors=False)

# 確定程式檔案所在目錄, 在 Windows 有最後的反斜線
_curdir = os.path.join(os.getcwd(), os.path.dirname(__file__))
template_root_dir = _curdir + "/templates"

app = Flask(__name__)

# 使用 session 必須要設定 secret_key
# In order to use sessions you have to set a secret key
# set the secret key.  keep this really secret:
secret_key = os.urandom(24).hex()
app.secret_key = secret_key

</t>
<t tx="yen.20210606091714.2">@app.route("/hello")
@login_required
def hello():
    return "&lt;h1 style='color:blue'&gt;Hello There!&lt;/h1&gt;"

</t>
<t tx="yen.20210606091717.1">@others

if __name__ == "__main__":
    
    if uwsgi:
        application = fossiloauth.app
    else:
        fossiloauth.app.run(host=domain_name, port=port, ssl_context='adhoc')
        
@language python
@tabwidth -4
</t>
<t tx="yen.20210606091727.1">import fossiloauth
from config import site

uwsgi = False

domain_name = site[0]
port = site[1]

application = fossiloauth.app


</t>
<t tx="yen.20210606092616.1">@app.route('/genAccount', methods=['POST'])
@login_required
def genAccount():

    """Generate Fossil SCM account
    """
    # get user input account and password
    #account = request.form["account"]
    # get user student number from session
    loginUser = session.get('user')
    account = loginUser
    password = request.form["password"]
    password2 = request.form["password2"]
    
    # Check if two password matched
    if password != password2:
        warning = "Passwords  do not match!&lt;br \&gt;"
        warning += "Please go back and retype!"
        return warning
    
    # To avoid shell command injection, accept only numbers for Account
    '''
    # get user account from session
    if account.isdigit():
        pass
    else:
        return "Accept only numbers for Account!"
    '''
    
    # To avoid shell command injection, no special characters allowed for Password
    for i in range(len(password)):
        if password[i] in ["&amp;", "|", ";", "$","&gt;", "&lt;", "`", "\\","!"]:
            return "No special characters allowed for Password!"
    
    # repository location path
    path = "/home/yen/repository/u/"
    
    output = ""
    
    # copy fossil repository from template.fossil
    command1 = "cp " + path + "template.fossil "  + path + account + ".fossil"
    
    output += command1 + "&lt;br /&gt;"
    
    # add account as the repository user which need to force user use student number as account
    command2 = "fossil user new " + account + " " + account + "@gm.nfu.edu.tw " + password + " -R " + path + account + ".fossil"
    
    output += command2 + "&lt;br /&gt;"
    
    # set account to be administrator which capability is "s" (setup)
    command3 = "fossil user capabilities " + account + " s"  + " -R " + path + account + ".fossil"
    
    output += command3 + "&lt;br /&gt;"
    
    # change the origin "cd" account capabilities to none which is a vacant string " "
    command4 = "fossil user capabilities  cd  '' "  + " -R " + path + account + ".fossil"
    
    output += command4 + "&lt;br /&gt;"
    
    output += "&lt;br\&gt;&lt;br \&gt;"
    
    # change directory to user repository path
    os.system("cd " + path)
    
    # execute command1
    os.system(command1)
    
    # wait for 0.1 second
    time.sleep(0.1)
    
    # execute command2
    try:
        os.system(command2)
        output += "command2 completed &lt;br /&gt;"
    except:
        output += "command2 failed&lt;br \&gt;"
    
    # wait for 0.1 second
    time.sleep(0.1)
    
    # execute command3
    try:
        os.system(command3)
        output += "command3 completed &lt;br /&gt;"
    except:
        output += "command3 failed &lt;br \&gt;"
    
    # wait for 0.1 second
    time.sleep(0.1)
    
    # execute command4
    try:
        os.system(command4)
        output += "command4 completed &lt;br /&gt;"
    except:
        output += "command4 failed&lt;br \&gt;"
    
    # return command for debug
    #return output
    
    return "Repository: " + account + " created!&lt;br /&gt;&lt;br \&gt;" + \
    "Link to repository: &lt;a href='https://fossil.kmol.info/u/" +account + "'&gt;" + \
    account + "&lt;/a&gt;"

    
    '''
    return "account:" + account+"&lt;br /&gt;" \
    + "password:" + password
    '''</t>
<t tx="yen.20210606092715.1">@app.route('/form')
@login_required
def form():
    """Create form routine"""
    
    # get user student number from session
    loginUser = session.get('user')
    
    output = "&lt;html&gt;&lt;body&gt;&lt;h1&gt;Create Fossil SCM Repository&lt;/h1&gt;&lt;form method='post' action='genAccount'&gt;"
    output += "Please set the password for your Fossil SCM repository: "
    output += loginUser + "&lt;br \&gt;&lt;br \&gt;"
    output += "Password:&lt;input type='password' name='password'&gt;&lt;br \&gt;&lt;br \&gt; "
    output += "Retype Password:&lt;input type='password' name='password2'&gt;&lt;br \&gt;&lt;br \&gt; "
    output += "&lt;input type='submit' value='Create Repository'&gt;&lt;/form&gt;&lt;/section&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;"
    
    return output
    
    
</t>
<t tx="yen.20210607011234.1">@app.route('/login/&lt;provider_name&gt;/', methods=['GET', 'POST'])
def login(provider_name):
    
    # We need response object for the WerkzeugAdapter.
    response = make_response()
    
    # Log the user in, pass it the adapter and the provider name.
    result = authomatic.login(WerkzeugAdapter(request, response), provider_name)
    
    # If there is no LoginResult object, the login procedure is still pending.
    if result:
        if result.user:
            # We need to update the user to get more info.
            result.user.update()
        
        # use session to save login user's email (試著將 @ 換為 _at_)
        #session['loginEmail'] = result.user.email.replace('@', '_at_')
        '''
        loginUser = result.user.email.split("@")[0]
        session["user"] = loginUser
        session["login"] = True
        template_lookup =
        '''
        # only get the string before @
        loginUser = result.user.email.split("@")[0]
        loginDomain = result.user.email.split("@")[1]
        
        # only kmoler can login
        #kmoler = ["scrum2"]
        #if loginUser in kmoler:
        
        # only @gm.nfu.edu.tw can login
        if loginDomain == "gm.nfu.edu.tw":
            session["user"] = loginUser

            session["login"] = True
            template_lookup = TemplateLookup(directories=[template_root_dir])
            loginTemplate = template_lookup.get_template("login.html")
            
            return loginTemplate.render(result=result, CALLBACK_URL=CALLBACK_URL, site=site)
        else:
            return "Sorry, you are not allowed to login."

    # Don't forget to return the response.
    return response
</t>
<t tx="yen.20210607011406.1"></t>
<t tx="yen.20210607011601.1">@app.route('/logout')
def logout():
    session.pop('login' , None)
    session.pop('user', None)
    flash('Logged out!')
    return redirect(url_for('index'))</t>
<t tx="yen.20210607012220.1">def login_required(f):
    @wraps(f)
    def wrap(*args, **kwargs):
        if 'login' in session:
            return f(*args, **kwargs)
        else:
            flash("You need to login first")
            return redirect(url_for('index'))

    return wrap</t>
<t tx="yen.20210607012249.1">@app.route("/menu")
@login_required
def menu():
    menuList = ["form", "forum"]
    template_lookup = TemplateLookup(directories=[template_root_dir])
    menuTemplate = template_lookup.get_template("menu.html")
    return menuTemplate.render(menuList=menuList)</t>
<t tx="yen.20210607012641.1">@app.route('/')
# root of the system can not set "login_required" decorator
# 開始改用 Make 作為 Template
def index():
    template_lookup = TemplateLookup(directories=[template_root_dir])
    indexTemplate = template_lookup.get_template("index.html")
    return indexTemplate.render()
</t>
<t tx="yen.20210607012830.1">fossiloauth web application

sudo pip3 install flask authomatic mako</t>
<t tx="yen.20210607012835.1">Location of openssl from https://www.msys2.org/

y:\msys64\mingw64\bin\openssl.exe

openssl req -x509 -nodes -days 600 -newkey rsa:2048 -keyout cd2020.key -out cd2020.crt</t>
<t tx="yen.20210607012905.1">Setup URL

https://console.developers.google.com

First setup, the welcome popup:

    Welcome, KMOLab!
    
    Create and manage your Google Cloud Platform instances, disks, networks and other resources in one place.
    
    need to agree the Terms of Service.
    
You have 12 projects remaining in your quota. 

----
Enable Google + Domain API

Go to credentials

Remember to configure the OAuth consent screen with information about your application.

----
OAuth consent screen

Choose how you want to configure and register your app, including your target users. You can only associate one app with your project.

User type:

choose internal: only allow @gm user to login

Press Create
----
Create OAuth client ID

Application type: Web application</t>
<t tx="yen.20210607012905.2">http://peterhudec.github.io/authomatic/</t>
<t tx="yen.20210607012905.3">config.py

from authomatic.providers import oauth2

CONFIG = {
        'google': {
            'class_': oauth2.Google,
            'consumer_key': '##########',
            'consumer_secret': '##########',
            'id': authomatic.provider_id(),
            'scope': oauth2.Google.user_info_scope
        }
    }
    '''
        'scope': ['https://www.googleapis.com/auth/userinfo.profile',
        'https://www.googleapis.com/auth/userinfo.email']
    '''

main.py

from flask import Flask, render_template, request, make_response
from authomatic.adapters import WerkzeugAdapter
from authomatic import Authomatic

from config import CONFIG

@app.route('/')
def index():
    return render_template('index.html')
    
@app.route('/login/&lt;provider_name&gt;/', methods=['GET', 'POST'])
def login(provider_name):
    response = make_response()
    result = authomatic.login(WerkzeugAdapter(request, response), provider_name)
    
    # You need to set a secret string otherwise the session will not work.
app.secret_key = 'random secret string'

    result = authomatic.login(
    WerkzeugAdapter(request, response),
    provider_name,
    session=session,
    session_saver=lambda: app.save_session(session, response)
    )
    if result:
        if result.user:
            result.user.update()
        return render_template('login.html', result=result)
    return response
    
{# base.html #}
&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;Authomatic Flask Example&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        {% block body %}{% endblock %}
    &lt;/body&gt;
&lt;/html&gt;

{# index.html #}
{% extends "base.html" %}
{% block body %}

    &lt;!--Links to the login handler--&gt;
    Login with &lt;a href="login/fb"&gt;Facebook&lt;/a&gt;.&lt;br /&gt;
    Login with &lt;a href="login/tw"&gt;Twitter&lt;/a&gt;.&lt;br /&gt;
    
    &lt;!--OpenID form--&gt;
    &lt;form action="login/oi"&gt;
        &lt;input type="text" name="id" value="me.yahoo.com" /&gt;
        &lt;input type="submit" value="Authenticate With OpenID"&gt;
    &lt;/form&gt;

{% endblock %}

{# login.html #}
{% extends "base.html" %}
{% block body %}
    &lt;a href="/"&gt;Home&lt;/a&gt;
    
    {% if result.error %}
        &lt;h2&gt;Damn that error: {{ result.error.message }}&lt;/h2&gt;
    {% endif %} 
    
    {% if result.user %}
        &lt;h1&gt;Hi {{ result.user.name }}&lt;/h1&gt;
        &lt;h2&gt;Your id is: {{ result.user.id }}&lt;/h2&gt;
        &lt;h2&gt;Your email is: {{ result.user.email }}&lt;/h2&gt;
    {% endif %}
    
    {% if result.user.credentials %}
            {% if result.provider.name == 'fb' %}
            Your are logged in with Facebook.&lt;br /&gt;
            {% set url = 'https://graph.facebook.com/{0}?fields=feed.limit(5)'.format(result.user.id) %}
            {% set response = result.provider.access(url) %}
            {% if response.status == 200 %}
            {% if response.data.error %}
                Damn that error: {{ response.data.error }}!
            {% endif %}
             {% if response.data.feed.data %}
                Your 5 most recent statuses:&lt;br /&gt;
                {% for status in response.data.feed.data %}
                    &lt;h3&gt;{{ status.message or status.name or status.story }}&lt;/h3&gt;
                    Posted on: {{ status.created_time }}
                {% endfor %}
            {% endif %}
                {% endif %}{# response.status == 200 #}
            {% endif %}{# result.provider.name == 'fb' #}
</t>
<t tx="yen.20210607012905.4">
設定網址:

https://console.developers.google.com

總共有兩項設定:

1. 啟用 Google + API

2. 然後到憑證處建立專案, 設定授權的 URI

然後 config.py 部份:

##############################################

import authomatic
from authomatic.providers import oauth2

CONFIG = {
        'google': {
            'class_': oauth2.Google,
            'consumer_key': '#######',
            'consumer_secret': '#######',
            'scope': oauth2.Google.user_info_scope
        }
    }
    
###############################################

# 接著為 login 部份

@app.route('/autho_login/&lt;provider_name&gt;/', methods=['GET', 'POST'])
def autho_login(provider_name):
    
    # We need response object for the WerkzeugAdapter.
    response = make_response()
    
    # Log the user in, pass it the adapter and the provider name.
    result = authomatic.login(WerkzeugAdapter(request, response), provider_name)
    
    # If there is no LoginResult object, the login procedure is still pending.
    if result:
        if result.user:
            # We need to update the user to get more info.
            result.user.update()
        
        # The rest happens inside the template.
        return render_template('autho_login.html', user_name=result.user.name, user_id=result.user.id, user_email=result.user.email, result=result)
    
    # Don't forget to return the response.
    return response</t>
<t tx="yen.20210607012905.5">@language python

keyFile = open('./../oauth_gm.txt', 'r')
with open('./../oauth_gm.txt', 'r') as f:
    key = f.read().splitlines()
g.es(key)</t>
<t tx="yen.20210607012905.6">@language python
# Windows use Ctrl + b to execute under Leo Editor node
# Mac use Command +b to execute
# this key is to keep the session safe
import secrets

g.es(secrets.token_urlsafe(24))
</t>
<t tx="yen.20210607012905.7">https://stackoverflow.com/questions/4202161/google-account-logout-and-redirect

https://www.google.com/accounts/Logout?continue=https://appengine.google.com/_ah/logout?continue=https://localhost:8443/guess

When user login with Gmail account, user email is saved into session and logout from Gmail by using javascript and redirect to https://localhost:8443/guess</t>
<t tx="yen.20210607014414.1">Use scrum2 at mde to get the json file

setup site: https://console.developers.google.com

scrum2_client_secret.txt has two lines:
the first line is client key
the second line is client secret</t>
<t tx="yen.20210607095902.1">restart the wsgi service:

sudo systemctl restart wsgi</t>
<t tx="yen.20210607100050.1"></t>
<t tx="yen.20210608205524.1">@language rest
@wrap

This @settings tree contains all active settings.

Settings outside this tree have no effect.

The node "Qt Gui Stylesheet settings" contains most of the setting relating to appearance.
</t>
<t tx="yen.20210608205524.10"></t>
<t tx="yen.20210608205524.100"></t>
<t tx="yen.20210608205524.101"></t>
<t tx="yen.20210608205524.102"></t>
<t tx="yen.20210608205524.103"></t>
<t tx="yen.20210608205524.104"></t>
<t tx="yen.20210608205524.105"></t>
<t tx="yen.20210608205524.106"></t>
<t tx="yen.20210608205524.107"></t>
<t tx="yen.20210608205524.108"></t>
<t tx="yen.20210608205524.109"></t>
<t tx="yen.20210608205524.11"></t>
<t tx="yen.20210608205524.110"></t>
<t tx="yen.20210608205524.111"></t>
<t tx="yen.20210608205524.112"></t>
<t tx="yen.20210608205524.113"></t>
<t tx="yen.20210608205524.114"></t>
<t tx="yen.20210608205524.115"></t>
<t tx="yen.20210608205524.116"></t>
<t tx="yen.20210608205524.117"></t>
<t tx="yen.20210608205524.118"></t>
<t tx="yen.20210608205524.119"></t>
<t tx="yen.20210608205524.12"></t>
<t tx="yen.20210608205524.120"></t>
<t tx="yen.20210608205524.121"></t>
<t tx="yen.20210608205524.122"></t>
<t tx="yen.20210608205524.123"></t>
<t tx="yen.20210608205524.124"></t>
<t tx="yen.20210608205524.125"></t>
<t tx="yen.20210608205524.126"></t>
<t tx="yen.20210608205524.127"></t>
<t tx="yen.20210608205524.128"></t>
<t tx="yen.20210608205524.129"></t>
<t tx="yen.20210608205524.13"></t>
<t tx="yen.20210608205524.130">cornsilk

</t>
<t tx="yen.20210608205524.131"></t>
<t tx="yen.20210608205524.132"></t>
<t tx="yen.20210608205524.133"></t>
<t tx="yen.20210608205524.134"></t>
<t tx="yen.20210608205524.135"></t>
<t tx="yen.20210608205524.136">Was @LeoYellow</t>
<t tx="yen.20210608205524.137">New.</t>
<t tx="yen.20210608205524.138"># These are provided for compatibility with old settings.
</t>
<t tx="yen.20210608205524.139"></t>
<t tx="yen.20210608205524.14"></t>
<t tx="yen.20210608205524.140"></t>
<t tx="yen.20210608205524.141"></t>
<t tx="yen.20210608205524.142"></t>
<t tx="yen.20210608205524.143"></t>
<t tx="yen.20210608205524.144"></t>
<t tx="yen.20210608205524.145"></t>
<t tx="yen.20210608205524.146"></t>
<t tx="yen.20210608205524.147"></t>
<t tx="yen.20210608205524.148"></t>
<t tx="yen.20210608205524.149">Should be white: it shows in the log pane.</t>
<t tx="yen.20210608205524.15"></t>
<t tx="yen.20210608205524.150"></t>
<t tx="yen.20210608205524.151"></t>
<t tx="yen.20210608205524.152"></t>
<t tx="yen.20210608205524.153"></t>
<t tx="yen.20210608205524.154"></t>
<t tx="yen.20210608205524.155"></t>
<t tx="yen.20210608205524.156"></t>
<t tx="yen.20210608205524.157"></t>
<t tx="yen.20210608205524.158"></t>
<t tx="yen.20210608205524.159"></t>
<t tx="yen.20210608205524.16"></t>
<t tx="yen.20210608205524.160"></t>
<t tx="yen.20210608205524.161"></t>
<t tx="yen.20210608205524.162"></t>
<t tx="yen.20210608205524.163"></t>
<t tx="yen.20210608205524.164"></t>
<t tx="yen.20210608205524.165"></t>
<t tx="yen.20210608205524.166"></t>
<t tx="yen.20210608205524.167"></t>
<t tx="yen.20210608205524.168"></t>
<t tx="yen.20210608205524.169">Important: changing the Basic Font settings below should be all you need to
do at first. All other font settings are defined in terms of the basic fonts.</t>
<t tx="yen.20210608205524.17"></t>
<t tx="yen.20210608205524.170"># All other fonts are defined in terms of these basic fonts.
# Changing the basic fonts are all that most users will want to do.</t>
<t tx="yen.20210608205524.171"></t>
<t tx="yen.20210608205524.172">**Important**: This should be set by each user.</t>
<t tx="yen.20210608205524.173">A small font size used by default in the check boxes in the Find tab.</t>
<t tx="yen.20210608205524.174">A small font size used by default in the status area.</t>
<t tx="yen.20210608205524.175">Valid values are: normal,italic,oblique</t>
<t tx="yen.20210608205524.176">valid values are: normal,bold,100,..,900</t>
<t tx="yen.20210608205524.177"></t>
<t tx="yen.20210608205524.178"></t>
<t tx="yen.20210608205524.179"></t>
<t tx="yen.20210608205524.18"></t>
<t tx="yen.20210608205524.180"></t>
<t tx="yen.20210608205524.181"></t>
<t tx="yen.20210608205524.182">This setting must exist for Ctrl-mousewheel font zooming to work.
</t>
<t tx="yen.20210608205524.183">Warning: These affect system dialogs.

Don't change these unless you are aware of the consequences</t>
<t tx="yen.20210608205524.184">@font-family</t>
<t tx="yen.20210608205524.185">10pt</t>
<t tx="yen.20210608205524.186">@font-weight</t>
<t tx="yen.20210608205524.187"> @font-style</t>
<t tx="yen.20210608205524.188"></t>
<t tx="yen.20210608205524.189"></t>
<t tx="yen.20210608205524.19"></t>
<t tx="yen.20210608205524.190"></t>
<t tx="yen.20210608205524.191"></t>
<t tx="yen.20210608205524.192"></t>
<t tx="yen.20210608205524.193"></t>
<t tx="yen.20210608205524.194"></t>
<t tx="yen.20210608205524.195">DejaVu Sans Mono</t>
<t tx="yen.20210608205524.196"></t>
<t tx="yen.20210608205524.197"></t>
<t tx="yen.20210608205524.198"></t>
<t tx="yen.20210608205524.199"></t>
<t tx="yen.20210608205524.2"></t>
<t tx="yen.20210608205524.20"></t>
<t tx="yen.20210608205524.200"></t>
<t tx="yen.20210608205524.201"></t>
<t tx="yen.20210608205524.202"></t>
<t tx="yen.20210608205524.203"></t>
<t tx="yen.20210608205524.204"></t>
<t tx="yen.20210608205524.205"></t>
<t tx="yen.20210608205524.206"></t>
<t tx="yen.20210608205524.207"></t>
<t tx="yen.20210608205524.208"></t>
<t tx="yen.20210608205524.209"></t>
<t tx="yen.20210608205524.21">Devs *must not* change these definitions, even within a specific theme!

Use different names instead.</t>
<t tx="yen.20210608205524.210"></t>
<t tx="yen.20210608205524.211"></t>
<t tx="yen.20210608205524.212"></t>
<t tx="yen.20210608205524.213"></t>
<t tx="yen.20210608205524.214"></t>
<t tx="yen.20210608205524.215"></t>
<t tx="yen.20210608205524.216"></t>
<t tx="yen.20210608205524.217"></t>
<t tx="yen.20210608205524.218"></t>
<t tx="yen.20210608205524.219"></t>
<t tx="yen.20210608205524.22"></t>
<t tx="yen.20210608205524.220"></t>
<t tx="yen.20210608205524.221"></t>
<t tx="yen.20210608205524.222"></t>
<t tx="yen.20210608205524.223"></t>
<t tx="yen.20210608205524.224"></t>
<t tx="yen.20210608205524.225"></t>
<t tx="yen.20210608205524.226"></t>
<t tx="yen.20210608205524.227"></t>
<t tx="yen.20210608205524.228"></t>
<t tx="yen.20210608205524.229"></t>
<t tx="yen.20210608205524.23"></t>
<t tx="yen.20210608205524.230">None: Use the default platform font.</t>
<t tx="yen.20210608205524.231"></t>
<t tx="yen.20210608205524.232"></t>
<t tx="yen.20210608205524.233"></t>
<t tx="yen.20210608205524.234"># These control such things as margin width and style.
# The most important settings are the Focused border styles.</t>
<t tx="yen.20210608205524.235"></t>
<t tx="yen.20210608205524.236"></t>
<t tx="yen.20210608205524.237"></t>
<t tx="yen.20210608205524.238">These give the width and style of the border surrounding the active pane.
</t>
<t tx="yen.20210608205524.239"># Set to None to disable border styling.</t>
<t tx="yen.20210608205524.24"></t>
<t tx="yen.20210608205524.240"></t>
<t tx="yen.20210608205524.241"></t>
<t tx="yen.20210608205524.242"></t>
<t tx="yen.20210608205524.243">The amount of extra width to give the gutter, in pixels</t>
<t tx="yen.20210608205524.244">The y offset of the first line of the gutter, in pixels.
</t>
<t tx="yen.20210608205524.245"></t>
<t tx="yen.20210608205524.246"></t>
<t tx="yen.20210608205524.247"></t>
<t tx="yen.20210608205524.248"></t>
<t tx="yen.20210608205524.249"></t>
<t tx="yen.20210608205524.25"></t>
<t tx="yen.20210608205524.250"></t>
<t tx="yen.20210608205524.251"></t>
<t tx="yen.20210608205524.252">These must be @string settings, even though they do affect colors.</t>
<t tx="yen.20210608205524.253"></t>
<t tx="yen.20210608205524.254"></t>
<t tx="yen.20210608205524.255"></t>
<t tx="yen.20210608205524.256"></t>
<t tx="yen.20210608205524.257"></t>
<t tx="yen.20210608205524.258">url(/home/edward/leo.repo/leo-editor/leo/Icons/nodes-dark/triangles/closed.png)</t>
<t tx="yen.20210608205524.259">url(/home/edward/leo.repo/leo-editor/leo/Icons/nodes-dark/triangles/open.png)</t>
<t tx="yen.20210608205524.26"></t>
<t tx="yen.20210608205524.260">Separation between icons on tree node items</t>
<t tx="yen.20210608205524.261"></t>
<t tx="yen.20210608205524.262"></t>
<t tx="yen.20210608205524.263"></t>
<t tx="yen.20210608205524.264"></t>
<t tx="yen.20210608205524.265"></t>
<t tx="yen.20210608205524.266">none or underline</t>
<t tx="yen.20210608205524.267"></t>
<t tx="yen.20210608205524.268"></t>
<t tx="yen.20210608205524.269"></t>
<t tx="yen.20210608205524.27"></t>
<t tx="yen.20210608205524.270"></t>
<t tx="yen.20210608205524.271">Valid values are: normal,italic,oblique</t>
<t tx="yen.20210608205524.272">Huh?
valid values are: normal,bold,100,..,900
</t>
<t tx="yen.20210608205524.273"></t>
<t tx="yen.20210608205524.274"></t>
<t tx="yen.20210608205524.275">none or underline</t>
<t tx="yen.20210608205524.276"></t>
<t tx="yen.20210608205524.277"></t>
<t tx="yen.20210608205524.278"></t>
<t tx="yen.20210608205524.279">bold or regular</t>
<t tx="yen.20210608205524.28"></t>
<t tx="yen.20210608205524.280"></t>
<t tx="yen.20210608205524.281"></t>
<t tx="yen.20210608205524.282">none or underline</t>
<t tx="yen.20210608205524.283"></t>
<t tx="yen.20210608205524.284"></t>
<t tx="yen.20210608205524.285">bold or regular</t>
<t tx="yen.20210608205524.286"></t>
<t tx="yen.20210608205524.287"></t>
<t tx="yen.20210608205524.288">none or underline</t>
<t tx="yen.20210608205524.289"></t>
<t tx="yen.20210608205524.29"></t>
<t tx="yen.20210608205524.290"></t>
<t tx="yen.20210608205524.291">bold or regular</t>
<t tx="yen.20210608205524.292"></t>
<t tx="yen.20210608205524.293"></t>
<t tx="yen.20210608205524.294"></t>
<t tx="yen.20210608205524.295"></t>
<t tx="yen.20210608205524.296"></t>
<t tx="yen.20210608205524.297"></t>
<t tx="yen.20210608205524.298"></t>
<t tx="yen.20210608205524.299">@language rest

Please *do not* change this style sheet, nor any of its descendants.

Instead, copy the *settings* you want to change from the node::

    Qt Gui settings

to myLeoSettings.leo.

Advanced users may create an additional style sheet, called::

    @data qt-gui-user-style-sheet

in myLeoSettings.leo.  But most users will never need to do this.
</t>
<t tx="yen.20210608205524.3">These are definitions of colors not defined by default, so you can refer to "solarized-red" as "@solarized-red" instead of "#dc322f".

**Please do not change these definitions**.

Feel free to *add* to them.
</t>
<t tx="yen.20210608205524.30"># Not an official solarized color.  Same as dark-base-03</t>
<t tx="yen.20210608205524.300">/*
@language css

    leoSettings.leo: @data qt-gui-plugin-style-sheet

    =========== Leo's new, fully parameterized, stylesheet. ===========
    
    This stylesheet is responsible for most of Leo's appearance.
    This stylesheet is composed of this nodes and all its descendants, in outline order.
    
    Leo inserts the settings in the tree "Qt Gui Stylesheet settings" into this stylesheet.
    Modify those settings, *not* this stylesheet.
    
    About Qt stylesheets: http://qt-project.org/doc/qt-4.8/stylesheet.html
*/

</t>
<t tx="yen.20210608205524.301">/* ========== Body pane ========== */

QTextEdit#richTextEdit {
    background-color:           @body-bg;
    color:                      @body-fg;
    selection-color:            @body-sel-fg;
    selection-background-color: @body-sel-bg;
    font-family:                @body-font-family;
    font-size:                  @font-size-body;
    /* Don't use body-font-size for the font-size. */
    font-weight:                @body-font-weight;
    font-style:                 @body-font-style;
}

QTextEdit#bigtextwarning {
    background-color: red; /* No longer used */
}</t>
<t tx="yen.20210608205524.302">/* ========== Buttons ========== 

    Examples::
    
        QPushButton#&lt;button text&gt;-button { &lt;style&gt; }
        QPushButton[button_kind="&lt;button kind&gt;"] { &lt;style&gt; }
*/

/*
    Default for all buttons.
    If you specify the size, you should also specify the font.
*/

/* -----
QPushButton {
    font-family: at-push-button-font-family;
    font-size:   at-push-button-font-size;
}
----- */

QPushButton[button_kind="at-button"] {
    /* Buttons created by @button nodes. */
    background-color: @at-button-btn-bg;
}
QPushButton[button_kind="debug-script"] {
    background-color: @debug-script-btn-bg;
}
QPushButton[button_kind="generic-button"] {
    /* The default styling for buttons. */
    background-color: @generic-button-btn-bg;
}
QPushButton[button_kind="run-script"] {
    /* The singleton run-script button. */
    background-color: @run-script-btn-bg;
}
QPushButton[button_kind="script-button"] {
    /* Buttons created by the script-button button. */
    background-color: @script-button-btn-bg;
}
QPushButton#script-button-button { 
    /* The singleton script-button button. */
    background-color: @script-button-button-btn-bg;
}
</t>
<t tx="yen.20210608205524.303">/*  ========== Dialogs (QLabel) ========== 

    Use care when changing these settings: they are used for dialog text. 
*/

QLabel {
    border:         @dialog-border;
    margin:         @dialog-margin;
    font-family:    @dialog-font-family;
    font-size:      @dialog-font-size;
    font-weight:    @dialog-font-weight;
    font-style:     @dialog-font-style;
}

QCheckBox#TipCheckbox {
    background: lightgrey;
}
</t>
<t tx="yen.20210608205524.304">/* ========== Components of the Find Tab ========== */

QWidget#findTab {
    background-color: @find-tab-bg;
}

QLabel#findHeading, QLabel#findHelp {
    font-family:    @find-font-family;
    font-size:      @find-font-size; 
    font-weight:    @find-font-weight;
    font-style:     @find-font-style; 
}

QLabel#findLabel, QLabel#changeLabel {
    font-family:    @find-font-family;
    font-size:      @find-font-size;
    font-weight:    @find-font-weight;
    font-style:     @find-font-style;
}

QLineEdit#findPattern, QLineEdit#findChange {
    font-family:    @find-pattern-font-family;
    font-size:      @find-font-size;
    font-weight:    @find-font-weight;
    font-style:     @find-font-style;
}

QCheckBox, QRadioButton {
    /* For the Find Tab. */
    font-family:    @checkbox-font-family;
    font-size:      @checkbox-font-size;
}
</t>
<t tx="yen.20210608205524.305">/* ===== Optional line-number gutter ===== */

QFrame#gutter {
    background-color:           @gutter-bg;
    color:                      @gutter-fg;
    font-family:                @gutter-font-family;
    font-size:                  @gutter-font-size;
    font-weight:                @gutter-font-weight;
    font-style:                 @gutter-font-style;
}</t>
<t tx="yen.20210608205524.306">/* ========== The log pane &amp; other text widgets ========== */

QTextEdit:focus {
  border-color: @focused-border-focus-color; 
}

QTextEdit {
    border-color:               @focused-border-unfocus-color; 
    border-style:               @focused-border-style;
    border-width:               @focused-border-width; 
    background-color:           @log-bg;
    color:                      @log-fg;
    selection-color:            @log-sel-fg;
    selection-background-color: @log-sel-bg;
    font-family:                @log-font-family;
    font-size:                  @log-font-size;
    font-weight:                @log-font-weight;
    font-style:                 @log-font-style;
}
</t>
<t tx="yen.20210608205524.307">/* ==========  Minibuffer ========== */

/* ----- The minibuffer itself ----- */

QLineEdit#lineEdit {
    color:                      @minibuffer-fg;
    background-color:           @minibuffer-bg;
    selection-color:            @minibuffer-sel-fg;
    selection-background-color: @minibuffer-sel-bg;
    font-family:                @minibuffer-font-family;
    font-size:                  @minibuffer-font-size;
    font-weight:                @minibuffer-font-weight;
    font-style:                 @minibuffer-font-style;
}

/* ----- The label of the minibuffer ----- */

QLabel#minibufferLabel {
    border:         @minibuffer-border;
    margin:         @minibuffer-margin;
    font-family:    @minibuffer-font-family;
    font-size:      @minibuffer-font-size;
    font-weight:    @minibuffer-font-weight;
    font-style:     @minibuffer-font-style;
}

</t>
<t tx="yen.20210608205524.308">/* ========== Outline pane ========== */

QTreeWidget {
    /* Outline pane defaults. */
    border-style:               @focused-border-style;
    border-width:               @focused-border-width; 
    border-color:               @focused-border-unfocus-color; 
    color:                      @tree-fg;
    background-color:           @tree-bg;
    font-family:                @tree-font-family;
    font-size:                  @tree-font-size;
    font-weight:                @tree-font-weight;
    font-style:                 @tree-font-style;
    show-decoration-selected:   0; /* 1: select entire row */
}

QTreeWidget QLineEdit {
    /* Headlines when they *are* being edited. */
    color:                      @head-fg;
    background-color:           @head-bg;
    selection-color:            @head-sel-fg; 
    selection-background-color: @head-sel-bg;
    font-family:                @head-font-family;
    font-size:                  @head-font-size; 
    font-weight:                @head-font-weight;
    font-style:                 @head-font-style;
}

QTreeWidget:focus {
  border-style:         @focused-border-style;
  border-width:         @focused-border-width; 
  border-color:         @focused-border-focus-color; 
}

QTreeWidget::item:selected {
    /* Headlines when they selected but *not* edited. */
    color:              @edit-label-fg;
    background-color:   @edit-label-bg;
    font-family:        @edit-label-font-family;
    font-size:          @edit-label-font-size;
    font-weight:        @edit-label-font-weight;
    font-style:         @edit-label-font-style;
}

/* ===== 

QTreeView::branch:open{
    color:                      @tree-fg;
    background-color:           @tree-bg;
}

QTreeView::branch:closed{
    color:                      @tree-fg;
    background-color:           @tree-bg;
}

QTreeView::branch:closed:has-children{
    image: AT-tree-image-closed;
}

QTreeView::branch:open:has-children{
    image: At-tree-image-open;
}

===== */

</t>
<t tx="yen.20210608205524.309"></t>
<t tx="yen.20210608205524.31"></t>
<t tx="yen.20210608205524.310">/* ========== bookmarks.py plugin ========== */

#show_bookmarks QPushButton {
    color:              @bookmarks_base_color;
    margin:             @bookmarks_base_margin;
    padding:            @bookmarks_base_padding;
    border:             @bookmarks_base_border;
    font-family:        @bookmarks_base_family;
    font-size:          @bookmarks_base_size;
    font-style:         @bookmarks_base_style;
    font-weight:        @bookmarks_base_weight;
    text-decoration:    @bookmarks_base_decoration;
}


</t>
<t tx="yen.20210608205524.311">/* ========== screencast.py plugin========== */

QPlainTextEdit#screencastcaption {
    background-color:   @screencast-bg;
    font-family:        @screencast-font-family;
    font-size:          @screencaset-font-size;
    font-weight:        @screencast-font-weight;
    font-style:         @screencaset-font-style;
}
</t>
<t tx="yen.20210608205524.312">/* ========== interact.py plugin ========== */

QPushButton[button_kind="interact"] {
    /* Buttons from the interact plugin. */
    background-color: @interact-btn-bg;
}
</t>
<t tx="yen.20210608205524.313">/* ========== quickmove.py plugin ========== */

QPushButton[button_kind="quick-move"] { 
    /* Buttons from the quickmove plugin. */
    background-color: @quick-move-btn-bg;
}</t>
<t tx="yen.20210608205524.314">QWidget#body-text-renderer {
    color:              @render-fg;
    background-color:   @render-bg;
}</t>
<t tx="yen.20210608205524.315">QSplitter {
    border-color:       @splitter-border-fg;
    background-color:   @splitter-bg;
    border-style:       @splitter-border-style;
}

QSplitter::handle {
    /* Supports only background attributes. */
    background-color:   @splitter-handle-bg;
}

QSplitter::handle:hover {
    background-color:   @splitter-hover-bg;
}
</t>
<t tx="yen.20210608205524.316">/* Status areas. */

QLineEdit#status1, QLineEdit#status2 {
    background-color:   @status-bg;
    color:              @status-fg;
    border-color:       @status-border-color;
    border-width:       @status-border-width;
    border-style:       @status-border-style;
    font-family:        @status-font-family;
    font-size:          @status-font-size;
    font-weight:        @status-font-weight;
    font-style:         @status-font-style;
}

</t>
<t tx="yen.20210608205524.317">/* ========== Widgets ========== */

/* ----- Destroys other background colors!
QFrame {
    background-color: at-frame-bg;
}
----- */

QScrollArea {
    background-color:   @scroll-area-bg;
}

QTabbedWidget {
    background-color:   @tabbed-widget-bg;
}

QTabBar::tab {
    background:         @unselected-tab-bg;
}

QTabBar::tab:selected, QTabBar::tab:hover {
    background:         @selected-tab-bg;
}

QStackedWidget {
    border-color:       @stacked-widget-border-color;
    background-color:   @stacked-widget-bg;
    padding:            @stacked-widget-padding;
}
</t>
<t tx="yen.20210608205524.318">/* ----- bookmarks.py ----- */

#show_bookmarks QPushButton[style_class~='bookmark_children'] {
    color:              @bookmarks_children_color;
    font-family:        @bookmarks_children_family;
    font-size:          @bookmarks_children_size;
    font-weight:        @bookmarks_children_weight;
    text-decoration:    @bookmarks_children_decoration;
}

#show_bookmarks QPushButton[style_class~='bookmark_expanded'] {
    font-size:          @bookmarks_expanded_size;
    color:              @bookmarks_expanded_color;
    font-style:         @bookmarks_expanded_style;
    font-weight:        @bookmarks_expanded_weight;
    text-decoration:    @bookmarks_expanded_decoration;
}

#show_bookmarks QPushButton[style_class~='bookmark_current'] {
    font-size:          @bookmarks_current_size;
    color:              @bookmarks_current_color;
    font-style:         @bookmarks_expanded_style;
    font-weight:        @bookmarks_current_weight;
    text-decoration:    @bookmarks_current_decoration;
}</t>
<t tx="yen.20210608205524.319">The following is an example user style sheet containing alternate highlighting for active panes.

To enable:

- Copy to myLeoSettings.leo.
- Remove the @ignore.
- Specify the settings used in the stylesheet.</t>
<t tx="yen.20210608205524.32"></t>
<t tx="yen.20210608205524.320">/* leoSettings.leo: @data qt-gui-user-style-sheet */

/* alternative active pane highlighting */

QTextEdit#log-widget,
QLineEdit#lineEdit,
QScrollArea#findScrollArea,
LeoQTreeWidget#treeWidget,
QTextEdit#richTextEdit {

    border-color: @focused-border-unfocus-color;
    border-style: @focused-border-style;
    border-width: @focused-border-width;
}

QTextEdit:focus#log-widget,
QLineEdit:focus#lineEdit,
QScrollArea:focus#findScrollArea,
LeoQTreeWidget:focus#treeWidget,
QTextEdit:focus#richTextEdit {

    border-color: @focused-border-focus-color;
}

QLineEdit#findPattern, QLineEdit#findChange {
  
    border-color: @focused-border-unfocus-color;
    border-style: @focused-border-style;
    border-width: @focused-border-width;
}

QLineEdit:focus#findPattern, QLineEdit:focus#findChange {

    border-color: @focused-border-focus-color;
    border-style: @focused-border-style;
    border-width: @focused-border-width;
}

QTextEdit:hover#log-widget, LeoQTreeWidget:hover#treeWidget,
QTextEdit:hover#richTextEdit {

}</t>
<t tx="yen.20210608205524.33"></t>
<t tx="yen.20210608205524.34"></t>
<t tx="yen.20210608205524.35"></t>
<t tx="yen.20210608205524.36"></t>
<t tx="yen.20210608205524.37"></t>
<t tx="yen.20210608205524.38"># Not an official solarized color: same as solorarized-base3</t>
<t tx="yen.20210608205524.39"></t>
<t tx="yen.20210608205524.4"></t>
<t tx="yen.20210608205524.40">To see these colors: http://ethanschoonover.com/solarized

For both light and dark
=======================

blue      #268bd2
cyan      #2aa198 
green     #859900
magenta   #d33682
orange    #cb4b16
red       #dc322f
violet    #6c71c4
yellow    #b58900


blue      #268bd2  4/4 blue      33 #0087ff 55 -10 -45  38 139 210 205  82  82
cyan      #2aa198  6/6 cyan      37 #00afaf 60 -35 -05  42 161 152 175  74  63
green     #859900  2/2 green     64 #5f8700 60 -20  65 133 153   0  68 100  60
magenta   #d33682  5/5 magenta  125 #af005f 50  65 -05 211  54 130 331  74  83
orange    #cb4b16  9/3 brred    166 #d75f00 50  50  55 203  75  22  18  89  80
red       #dc322f  1/1 red      160 #d70000 50  65  45 220  50  47   1  79  86
violet    #6c71c4 13/5 brmagenta 61 #5f5faf 50  15 -45 108 113 196 237  45  77
yellow    #b58900  3/3 yellow   136 #af8700 60  10  65 181 137   0  45 100  71


base03    #002b36  8/4 brblack  234 #1c1c1c 15 -12 -12   0  43  54 193 100  21
base02    #073642  0/4 black    235 #262626 20 -12 -12   7  54  66 192  90  26
base01    #586e75 10/7 brgreen  240 #585858 45 -07 -07  88 110 117 194  25  46
base00    #657b83 11/7 bryellow 241 #626262 50 -07 -07 101 123 131 195  23  51
base0     #839496 12/6 brblue   244 #808080 60 -06 -03 131 148 150 186  13  59
base1     #93a1a1 14/4 brcyan   245 #8a8a8a 65 -05 -02 147 161 161 180   9  63
base2     #eee8d5  7/7 white    254 #e4e4e4 92 -00  10 238 232 213  44  11  93
base3     #fdf6e3 15/7 brwhite  230 #ffffd7 97  00  10 253 246 227  44  10  99

Dark
====

    base1 optional emphasized content (keywords)
  * base0 default (body text)
    
    base01 comments
    base02 background highlights (selected background)
  * base03 background
    
Light
=====

    base01 optional emphasized content (keywords)
  * base00 default (body text)
    base1 comments
    base2 background highlights (selected background)
  * base3 background
</t>
<t tx="yen.20210608205524.5">Leo's traditional tree color.</t>
<t tx="yen.20210608205524.6">These defaults settings ensure that legacy themes continue to work as before.

May be overridden by themes.</t>
<t tx="yen.20210608205524.7"></t>
<t tx="yen.20210608205524.8"></t>
<t tx="yen.20210608205524.9"></t>
<t tx="yen.20210608205524.90">The children of this node determine how Leo looks.</t>
<t tx="yen.20210608205524.91">@language rest
@wrap

This tree contains settings that are inserted style sheets. For example,
given the setting::

    @color body-bg = white
    
Leo will substitute "white" everywhere that "@body-bg" appears in the following two trees:

    @data qt-gui-plugin-style-sheet
    @data qt-gui-user-style-sheet

Many users will want to change the settings in the Fonts section, especially these:

- @string font-size:
  The base font size, the largest of the font-size settings.
- @string medium-font-size:
  An intermediate font sized used by default in the Find Panel.
- @string small-font-size:
  A small font size used in buttons.
</t>
<t tx="yen.20210608205524.92"></t>
<t tx="yen.20210608205524.93"></t>
<t tx="yen.20210608205524.94"></t>
<t tx="yen.20210608205524.95"></t>
<t tx="yen.20210608205524.96"></t>
<t tx="yen.20210608205524.97"></t>
<t tx="yen.20210608205524.98"></t>
<t tx="yen.20210608205524.99"></t>
<t tx="yen.20210626135328.1">from flask import Flask
from flask import make_response, request, redirect
from flask_cors import CORS
import requests
#

app = Flask(__name__)
CORS(app, support_credentials=False)
app.config['SECRET_KEY'] = 'SUPER SECRET'

@app.route('/')
def hello_world():
    with requests.Session() as s:
        url = 'https://fossil.kmol.info/u/yen/login'
        post_var = {'u': username, 'p': password}
        headers = {'X-Requested-With': 'XMLHttpRequest'}
        result = s.post(url, data = post_var, headers = headers)
        cookie = s.cookies.get_dict()
        key = list(cookie.keys())[0]
        value = cookie[key]
        '''
        print(key, value)
        resp = redirect(url)
        resp.set_cookie(key, value)
        return resp
        '''
        forum = "https://fossil.kmol.info/u/yen/forum"
        response = make_response(redirect(forum))
        response.set_cookie(key, value)
        return response
        
i
if __name__ == '__main__':
    app.run(host="140.130.17.33")</t>
<t tx="yen.20210626135449.1">import sqlite3
con = sqlite3.connect('kmol.fossil')
cur = con.cursor()
 
# this is the login user through flask Oauth2 login
username = "yen"
 
# check if login name existed
# pw field is the password
cur.execute("select pw from user where login='" + username + "';")
password = cur.fetchall()
 
if len(password) == 0:
    print("account is not created!")
    # we may need to create account for this login user
else:
    # the fetched data is a list with tuple inside
    print(password[0][0])
    # we will need the user account and password to get login cookie
    # we will use the account/password to login through flask connection
 
con.close()</t>
<t tx="yen.20210626140559.1">@app.route('/forum')
@login_required
def forum():
    """Create forum routine"""
    # username and password in config.py
    with requests.Session() as s:
        url = 'https://fossil.kmol.info/u/yen/login'
        post_var = {'u': fossil[0], 'p': fossil[1]}
        headers = {'X-Requested-With': 'XMLHttpRequest'}
        result = s.post(url, data = post_var, headers = headers)
        cookie = s.cookies.get_dict()
        key = list(cookie.keys())[0]
        value = cookie[key]

        forum = "https://fossil.kmol.info/u/yen/forum"
        response = make_response(redirect(forum))
        response.set_cookie(key, value)
        return response</t>
</tnodes>
</leo_file>
